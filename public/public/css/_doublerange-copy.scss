$c0: #e6450f; /* background */
$c1: #fff; /* text */

$track-h: 1rem;         // track height
$thumb-d: 1.5rem;       // thumb controller width & height
$label-h: 3rem;         // label height

@mixin track() {
	border: none;
	padding: 0;
    width: 100%;
    height: $track-h;
	background: none;
	color: transparent;
}

@mixin thumb($m: 0) {
	box-sizing: border-box;
	margin-top: $m;
	border: none;
    width: $thumb-d;
    height: $thumb-d;
	border-radius: 50%;
    box-shadow: 
            0 1px .125em rgba(#ae725a, .5), 
            0 1px .25em rgba(#ae725a, .5);
    background: #eae9ea;
	transition: none;
	pointer-events: auto;
	cursor: pointer;
}
// middle placement of inputs
%mid {
	grid-column: 2;
	grid-row: 2;
	place-self: center;
	width: var(--track-w);
	pointer-events: none;
}

* {
	--hl: 0;
	--nothl: calc(1 - var(--hl));
	margin: 0;
	padding: 0;
	background: none;
	font: inherit;
}

html {
    --max: 20;

	--i: var(--wide, 1);            // change to 0 at media-querry max 570px
	--j: var(--narr, 0);            // change to 1 at media-querry max 440px
	--notj: calc(1 - var(--j));     // toggle for max 440px
	// display: grid;
	// place-content: center;
	// overflow-x: hidden;
	// height: 100vh;
	// background: $c0;
	// color: $c1;
	// font: 300 1em/ 1.5 quicksand, trebuchet ms, sans-serif;
	
	@media (min-width: 750px) { font-size: 1.25em };
	
	@media (max-width: 570px) { --wide: 0 };
	
	@media (max-width: 440px) { --narr: 1 };
	
	@media (max-width: 320px) { font-size: .75em };
	
	&:not(.js) {
		output, .wrap-range::after { visibility: hidden }
	}
}

.wrap-range {
	--u: calc(var(--notj) * 2.75rem + var(--j) * 10vw);
	--n-cols: calc(var(--max) + 1);
	--middl-w: calc(var(--n-cols)*var(--u));
	--label-w: calc(var(--i) * 5rem);
	--track-w: calc(var(--middl-w) - var(--u) + #{$thumb-d});
	--m: calc(.5 * (var(--a) + var(--b)));
	
	display: grid;
	grid-auto-flow: row dense;
	grid-template-rows: $label-h max-content $label-h;
	grid-template-columns: var(--label-w) var(--middl-w) var(--label-w);
	filter: brightness(.8);
	// track
	&::before, &::after {
		@extend %mid;
		z-index: -1;
		height: $track-h;
		border-radius: $track-h;
		content: '';
	}
	
	&::before {
		box-shadow: 0 1px #fc7444;
		background: linear-gradient(#9b2f0b, #bc3c0f);
	}
	
	&::after {
		background: #ecebe9;
		--mask: 
			linear-gradient(90deg, 
					red calc(#{.5 * $thumb-d} + var(--a) * var(--u)), 
					transparent 0), 
			linear-gradient(90deg, 
					red calc(#{.5 * $thumb-d} + var(--b) * var(--u)), 
					transparent 0);
		-webkit-mask: var(--mask);
		// -webkit-mask-composite: xor;
						mask: var(--mask);
						mask-composite: exclude;
	}
	
	&:focus-within { filter: none }
}
// label
.sr-only {
    position: absolute;
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
}
// range
input[type='range'] {
	&, &::-webkit-slider-thumb, 
	&::-webkit-slider-runnable-track {
		-webkit-appearance: none
	}
	// track
	@extend %mid;
    min-height: 1.5 * $thumb-d;
    height: 1.5 * $track-h;
    background: none;
    
	&::-webkit-slider-runnable-track { @include track() }
	&::-moz-range-track { @include track() }
	&::-ms-track { @include track() }
	
	&::-ms-fill-lower { display: none }
	
	&::-webkit-slider-thumb { @include thumb(calc(.5*(#{$track-h} - #{$thumb-d}))) }
	&::-moz-range-thumb { @include thumb() }
	&::-ms-thumb { @include thumb() }
	// outputs
	& + [for] {
		display: grid;
		justify-self: start;
		margin-left: calc(.5*var(--u));
		padding-bottom: .75rem;
		transform: translate(calc(var(--c)*var(--u) - 50%));
		
		&::after {
			display: block;
			padding: .25em .75em;
			transform-origin: 50% 100%;
			transform: scale(var(--hl));
			border-radius: .25em;
			box-shadow: 
				inset 0 0 2px #ff7747, 
				inset 0 0 .25em #bc3c0f, 
				inset 0 0 .5em #cf3f10,
				0 1px #fc7444;
			opacity: var(--hl);
			transition: .3s ease-out;
			transition-property: transform, opacity
		}
	}
	
	&, & + [for] { grid-column: 2 }
	// output above thumb gets visible
	&:focus {
		outline: solid 0 transparent;
		
		&, & + [for] { --hl: 1 }
	}
}

output[for] {
    --lbl-a: 100;
    --lbl-b: 0;

	grid-row: 1;
	font-size: 1.25em;
	font-weight: 600;
	counter-reset: lbl var(--lbl);
	
	&:after {
		content: counter(lbl) ' px'
	}
	
	& + & {
		--k: var(--parity, 1);
		--notk: calc(1 - var(--k));
		--sgnk: calc(1 - 2*var(--k));
		grid-column: calc(2*var(--notk) + 1);
		align-self: center;
		justify-self: var(--parity, end);
		overflow: hidden;
		grid-row-end: span 3;
		opacity: calc(4*var(--sgnk)*(var(--c) - var(--m)) + 1);
		color: rgba($c1, calc(var(--i)))
	}
	
	&:nth-of-type(3n) {
		--parity: 0;
    }
    
    &[for='a'] { --c: var(--a); --lbl: var(--lbl-a) }
    &[for='b'] { --c: var(--b); --lbl: var(--lbl-b) }
}

// datalist {
// 	display: grid;
// 	grid-auto-flow: column;
// 	grid-row: 3;
// 	place-self: start stretch;
// 	width: var(--middl-w);
	
// }

option {
	display: flex;
	flex-direction: column;
	justify-content: center;
	width: var(--u);
	font-size: var(--notj);
	text-align: center;
	
	&::before {
		align-self: center;
        width: 4px;
        height: .75rem;
		box-shadow: inset -1px 0 1px #fc7777;
		background: #9b2f0b;
		content: ''
	}
	
	&:not(:nth-child(3n + 1)) { color: rgba($c1, var(--notj)) }
}